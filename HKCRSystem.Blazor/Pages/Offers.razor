@page "/offers"
@using HKCRSystem.Blazor.Data.DTO

<PageTitle>offers</PageTitle>

<MudContainer Class="mt-4 position-relative">
    <div class="d-flex justify-content-end mb-2">
        <MudButton Variant="Variant.Filled" Color="Color.Primary">
            Add Offer
        </MudButton>
    </div>
    <MudTable FixedHeader="true" FixedFooter="true" Height="450px" Items="@offersDatas" Hover="true" Striped="false">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Offer</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<OfferData, object>(OfferData => OfferData.Name)">Name</MudTableSortLabel></MudTh>
            <MudTh>Message</MudTh>
            <MudTh>Type</MudTh>
            <MudTh>Discount(%)</MudTh>
            <MudTh>Start Date</MudTh>
            <MudTh>End Date</MudTh>
            <MudTh>Created By</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Message">@context.Message</MudTd>
            <MudTd DataLabel="Type">@context.Type</MudTd>
            <MudTd DataLabel="Discount(%)">@context.DiscountPercent</MudTd>
            <MudTd DataLabel="Start Date">@context.StartDate</MudTd>
            <MudTd DataLabel="End Date">@context.EndDate</MudTd>
            <MudTd DataLabel="Created By">@context.CreatedBy</MudTd>

            <MudTd DataLabel="Actions">
                <MudIconButton Icon="@Icons.Material.Filled.EditNote" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" aria-label="Edit"></MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" aria-label="delete" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>

@code{
    private List<OfferData>? offersDatas;
    //private bool FilterHandler(InventoryItem item) => SearchFilter(item, toSearch);
    protected override async Task OnInitializedAsync()
    {
        offersDatas = new List<OfferData>
        {
            new OfferData
            {
                Id = Guid.NewGuid(),
                Name = "Khemraj",
                Message = "Singh",
                Type = "Khemrajsinght57@gmail.com",
                StartDate = DateTime.Now,
                EndDate = DateTime.Now,
DiscountPercent = 10.0f,
                CreatedBy = "Staff"
            }
        };
    }
}